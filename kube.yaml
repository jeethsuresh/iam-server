# new namespace
# new postgresql cluster
# new iam deployment
# new iam service
apiVersion: v1
kind: Namespace
metadata:
  name: iam
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: iam-cluster
  namespace: iam
spec:
  instances: 1
  storage:
    size: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: iam
  namespace: iam
spec:
  selector:
    app: iam
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam
  namespace: iam
spec:
  selector:
    matchLabels:
      app: iam
  replicas: 3
  template:
    metadata:
      labels:
        app: iam
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox
        command: ['sh', '-c', 'until nc -zv iam-cluster-rw 5432; do echo waiting for db; sleep 2; done;']
      imagePullSecrets: 
       - name: "my-registry-secret"
      containers:
      - name: iam
        image: docker.jeeth.dev/iam-server:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: USE_POSTGRES
          value: "true"
        - name: POSTGRES_URL
          value: "iam-cluster-rw"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iam-cluster-app
              key: password
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: iam-cluster-app
              key: username
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iam-ingress
  namespace: iam
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "nginx"    
spec:
  ingressClassName: nginx
  rules:
  - host: "iam.jeeth.dev"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: iam
            port: 
              number: 80
  tls:
  - hosts:
    - "iam.jeeth.dev"
    secretName: iam-tls